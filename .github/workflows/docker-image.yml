name: Docker Image CI

on:
  push:

jobs:
  docker:
    runs-on: ubuntu-22.04
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Extract version from pyproject.toml
        id: get_version
        run: |
          VERSION=$(grep -Po '(?<=^version = ")[^"]*' tut2app/pyproject.toml)
          echo "Project version is $VERSION"
          echo "version=$VERSION" >> $GITHUB_ENV
          echo "github_sha=$GITHUB_SHA" >> $GITHUB_ENV
          # We also store the hash in a file so it can be displayed by the TUT2 server (#18)
          echo $GITHUB_SHA > tut2app/FROZEN_HASH

      - name: Use extracted version
        run: |
          echo "Using the extracted version: ${{ env.version }}"

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64 #,linux/arm64
          context: ./tut2app
          push: true
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          tags: |
            ghcr.io/${{ github.repository_owner }}/tut2:latest-dev
            ghcr.io/${{ github.repository_owner }}/tut2:${{ env.version }}-${{ env.github_sha }}-dev
